{"version":3,"sources":["webpack:///webpack/bootstrap 886ae17e9519966f9320","webpack:///./preloader.coffee","webpack:///./lib/pace.custom.coffee"],"names":[],"mappings":"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","file":"preloader.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 886ae17e9519966f9320\n **/","pace = require './lib/pace.custom'\n\npreloader      = document.getElementById 'preloader'\npreloaderFront = document.querySelector '.preloader__frontlayer'\n\nhidePreloader = (cb = -> ) ->\n  setTimeout ->\n    preloader.classList.add 'fade-out'\n  , 300\n  setTimeout ->\n    preloader.setAttribute 'hidden', 'hidden'\n  , 800\n\nif preloader\n  pace.on 'update', (progress) ->\n    preloaderFront.style.width = \"#{progress}%\"\n\n  pace.on 'done', ->\n    do hidePreloader\n\npace.start()\n\n# module.exports = pace\n\n\n\n/** WEBPACK FOOTER **\n ** ./preloader.coffee\n **/","###\nCustomization:\n  - added 'update' event trigger (line 236)\n  - commented AMD export due to unexpected error when compile with webpack (line 752-754)\n###\n\ndefaultOptions =\n  # How long should it take for the bar to animate to a new\n  # point after receiving it\n  catchupTime: 100\n\n  # How quickly should the bar be moving before it has any progress\n  # info from a new source in %/ms\n  initialRate: .03\n\n  # What is the minimum amount of time the bar should be on the\n  # screen.  Irrespective of this number, the bar will always be on screen for\n  # 33 * (100 / maxProgressPerFrame) + ghostTime ms.\n  minTime: 250\n\n  # What is the minimum amount of time the bar should sit after the last\n  # update before disappearing\n  ghostTime: 100\n\n  # Its easy for a bunch of the bar to be eaten in the first few frames\n  # before we know how much there is to load.  This limits how much of\n  # the bar can be used per frame\n  maxProgressPerFrame: 20\n\n  # This tweaks the animation easing\n  easeFactor: 1.25\n\n  # Should pace automatically start when the page is loaded, or should it wait for `start` to\n  # be called?  Always false if pace is loaded with AMD or CommonJS.\n  startOnPageLoad: true\n\n  # Should we restart the browser when pushState or replaceState is called?  (Generally\n  # means ajax navigation has occured)\n  restartOnPushState: true\n\n  # Should we show the progress bar for every ajax request (not just regular or ajax-y page\n  # navigation)? Set to false to disable.\n  #\n  # If so, how many ms does the request have to be running for before we show the progress?\n  restartOnRequestAfter: 500\n\n  # What element should the pace element be appended to on the page?\n  target: 'body'\n\n  elements:\n    # How frequently in ms should we check for the elements being tested for\n    # using the element monitor?\n    checkInterval: 100\n\n    # What elements should we wait for before deciding the page is fully loaded (not required)\n    selectors: ['body']\n\n  eventLag:\n    # When we first start measuring event lag, not much is going on in the browser yet, so it's\n    # not uncommon for the numbers to be abnormally low for the first few samples.  This configures\n    # how many samples we need before we consider a low number to mean completion.\n    minSamples: 10\n\n    # How many samples should we average to decide what the current lag is?\n    sampleCount: 3\n\n    # Above how many ms of lag is the CPU considered busy?\n    lagThreshold: 3\n\n  ajax:\n    # Which HTTP methods should we track?\n    trackMethods: ['GET']\n\n    # Should we track web socket connections?\n    trackWebSockets: true\n\n    # A list of regular expressions or substrings of URLS we should ignore (for both tracking and restarting)\n    ignoreURLs: []\n\nnow = ->\n  performance?.now?() ? +new Date\n\nrequestAnimationFrame = window.requestAnimationFrame or window.mozRequestAnimationFrame or\n                        window.webkitRequestAnimationFrame or window.msRequestAnimationFrame\n\ncancelAnimationFrame = window.cancelAnimationFrame or window.mozCancelAnimationFrame\n\nif not requestAnimationFrame?\n  requestAnimationFrame = (fn) ->\n    setTimeout fn, 50\n\n  cancelAnimationFrame = (id) ->\n    clearTimeout id\n\nrunAnimation = (fn) ->\n  last = now()\n  tick = ->\n    diff = now() - last\n\n    if diff >= 33\n      # Don't run faster than 30 fps\n\n      last = now()\n      fn diff, ->\n        requestAnimationFrame tick\n    else\n      setTimeout tick, (33 - diff)\n\n  tick()\n\nresult = (obj, key, args...) ->\n  if typeof obj[key] is 'function'\n    obj[key](args...)\n  else\n    obj[key]\n\nextend = (out, sources...) ->\n  for source in sources when source\n    for own key, val of source\n      if out[key]? and typeof out[key] is 'object' and val? and typeof val is 'object'\n        extend(out[key], val)\n      else\n        out[key] = val\n  out\n\navgAmplitude = (arr) ->\n  sum = count = 0\n  for v in arr\n    sum += Math.abs(v)\n    count++\n\n  sum / count\n\ngetFromDOM = (key='options', json=true) ->\n  el = document.querySelector \"[data-pace-#{ key }]\"\n\n  return unless el\n\n  data = el.getAttribute \"data-pace-#{ key }\"\n\n  return data if not json\n\n  try\n    return JSON.parse data\n  catch e\n    console?.error \"Error parsing inline pace options\", e\n\nclass Evented\n  on: (event, handler, ctx, once=false) ->\n    @bindings ?= {}\n    @bindings[event] ?= []\n    @bindings[event].push {handler, ctx, once}\n\n  once: (event, handler, ctx) ->\n    @on(event, handler, ctx, true)\n\n  off: (event, handler) ->\n    return unless @bindings?[event]?\n\n    if not handler?\n      delete @bindings[event]\n    else\n      i = 0\n      while i < @bindings[event].length\n        if @bindings[event][i].handler is handler\n          @bindings[event].splice i, 1\n        else\n          i++\n\n  trigger: (event, args...) ->\n    if @bindings?[event]\n      i = 0\n      while i < @bindings[event].length\n        {handler, ctx, once} = @bindings[event][i]\n\n        handler.apply(ctx ? @, args)\n\n        if once\n          @bindings[event].splice i, 1\n        else\n          i++\n\nPace = window.Pace or {}\nwindow.Pace = Pace\n\nextend Pace, Evented::\n\noptions = Pace.options = extend {}, defaultOptions, window.paceOptions, getFromDOM()\n\nfor source in ['ajax', 'document', 'eventLag', 'elements']\n  # true enables them without configuration, so we grab the config from the defaults\n  if options[source] is true\n    options[source] = defaultOptions[source]\n\nclass NoTargetError extends Error\n\nclass Bar\n  constructor: ->\n    @progress = 0\n\n  getElement: ->\n    if not @el?\n      targetElement = document.querySelector options.target\n\n      if not targetElement\n        throw new NoTargetError\n\n      @el = document.createElement 'div'\n      @el.className = \"pace pace-active\"\n\n      document.body.className = document.body.className.replace /pace-done/g, ''\n      if not /pace-running/.test document.body.className\n        document.body.className += ' pace-running'\n\n      @el.innerHTML = '''\n      <div class=\"pace-progress\">\n        <div class=\"pace-progress-inner\"></div>\n      </div>\n      <div class=\"pace-activity\"></div>\n      '''\n      if targetElement.firstChild?\n        targetElement.insertBefore @el, targetElement.firstChild\n      else\n        targetElement.appendChild @el\n\n    @el\n\n  finish: ->\n    el = @getElement()\n\n    el.className = el.className.replace 'pace-active', ''\n    el.className += ' pace-inactive'\n\n    document.body.className = document.body.className.replace 'pace-running', ''\n    document.body.className += ' pace-done'\n\n  update: (prog) ->\n    @progress = prog\n\n    Pace.trigger 'update', prog\n\n    do @render\n\n  destroy: ->\n    try\n      @getElement().parentNode.removeChild(@getElement())\n    catch NoTargetError\n\n    @el = undefined\n\n  render: ->\n    if not document.querySelector(options.target)?\n      return false\n\n    el = @getElement()\n\n    transform = \"translate3d(#{ @progress }%, 0, 0)\"\n    for key in ['webkitTransform', 'msTransform', 'transform']\n      el.children[0].style[key] = transform\n\n    if not @lastRenderedProgress or @lastRenderedProgress|0 != @progress|0\n      # The whole-part of the number has changed\n\n      el.children[0].setAttribute 'data-progress-text', \"#{ @progress|0 }%\"\n\n      if @progress >= 100\n        # We cap it at 99 so we can use prefix-based attribute selectors\n        progressStr = '99'\n      else\n        progressStr = if @progress < 10 then \"0\" else \"\"\n        progressStr += @progress|0\n\n      el.children[0].setAttribute 'data-progress', \"#{ progressStr }\"\n\n    @lastRenderedProgress = @progress\n\n  done: ->\n    @progress >= 100\n\nclass Events\n  constructor: ->\n    @bindings = {}\n\n  trigger: (name, val) ->\n    if @bindings[name]?\n      for binding in @bindings[name]\n        binding.call @, val\n\n  on: (name, fn) ->\n    @bindings[name] ?= []\n    @bindings[name].push fn\n\n_XMLHttpRequest = window.XMLHttpRequest\n_XDomainRequest = window.XDomainRequest\n_WebSocket = window.WebSocket\n\nextendNative = (to, from) ->\n  for key of from::\n    try\n      if not to[key]? and typeof from[key] isnt 'function'\n        if typeof Object.defineProperty is 'function'\n          Object.defineProperty(to, key, {\n             get: ->\n                 return from::[key];\n              ,\n              configurable: true,\n              enumerable: true })\n        else\n          to[key] = from::[key]\n    catch e\n\nignoreStack = []\n\nPace.ignore = (fn, args...) ->\n  ignoreStack.unshift 'ignore'\n  ret = fn(args...)\n  ignoreStack.shift()\n  ret\n\nPace.track = (fn, args...) ->\n  ignoreStack.unshift 'track'\n  ret = fn(args...)\n  ignoreStack.shift()\n  ret\n\nshouldTrack = (method='GET') ->\n  if ignoreStack[0] is 'track'\n    return 'force'\n\n  if not ignoreStack.length and options.ajax\n    if method is 'socket' and options.ajax.trackWebSockets\n      return true\n    else if method.toUpperCase() in options.ajax.trackMethods\n      return true\n\n  return false\n\n# We should only ever instantiate one of these\nclass RequestIntercept extends Events\n  constructor: ->\n    super\n\n    monitorXHR = (req) =>\n      _open = req.open\n      req.open = (type, url, async) =>\n        if shouldTrack(type)\n          @trigger 'request', {type, url, request: req}\n\n        _open.apply req, arguments\n\n    window.XMLHttpRequest = (flags) ->\n      req = new _XMLHttpRequest(flags)\n\n      monitorXHR req\n\n      req\n\n    try\n      extendNative window.XMLHttpRequest, _XMLHttpRequest\n\n    if _XDomainRequest?\n      window.XDomainRequest = ->\n        req = new _XDomainRequest\n\n        monitorXHR req\n\n        req\n\n      try\n        extendNative window.XDomainRequest, _XDomainRequest\n\n    if _WebSocket? and options.ajax.trackWebSockets\n      window.WebSocket = (url, protocols) =>\n        if protocols?\n          req = new _WebSocket(url, protocols)\n        else\n          req = new _WebSocket(url)\n\n        if shouldTrack('socket')\n          @trigger 'request', {type: 'socket', url, protocols, request: req}\n\n        req\n\n      try\n        extendNative window.WebSocket, _WebSocket\n\n_intercept = null\ngetIntercept = ->\n  if not _intercept?\n    _intercept = new RequestIntercept\n  _intercept\n\nshouldIgnoreURL = (url) ->\n  for pattern in options.ajax.ignoreURLs\n    if typeof pattern is 'string'\n      if url.indexOf(pattern) isnt -1\n        return true\n\n    else\n      if pattern.test(url)\n        return true\n\n  return false\n\n# If we want to start the progress bar\n# on every request, we need to hear the request\n# and then inject it into the new ajax monitor\n# start will have created.\n\ngetIntercept().on 'request', ({type, request, url}) ->\n  return if shouldIgnoreURL(url)\n\n  if not Pace.running and (options.restartOnRequestAfter isnt false or shouldTrack(type) is 'force')\n    args = arguments\n\n    after = options.restartOnRequestAfter or 0\n    if typeof after is 'boolean'\n      after = 0\n\n    setTimeout ->\n      if type is 'socket'\n        stillActive = request.readyState < 2\n      else\n        stillActive = 0 < request.readyState < 4\n\n      if stillActive\n        Pace.restart()\n\n        for source in Pace.sources\n          if source instanceof AjaxMonitor\n            source.watch args...\n            break\n    , after\n\nclass AjaxMonitor\n  constructor: ->\n    @elements = []\n\n    getIntercept().on 'request', => @watch arguments...\n\n  watch: ({type, request, url}) ->\n    return if shouldIgnoreURL(url)\n\n    if type is 'socket'\n      tracker = new SocketRequestTracker(request)\n    else\n      tracker = new XHRRequestTracker(request)\n\n    @elements.push tracker\n\nclass XHRRequestTracker\n  constructor: (request) ->\n    @progress = 0\n\n    if window.ProgressEvent?\n      # We're dealing with a modern browser with progress event support\n\n      size = null\n      request.addEventListener 'progress', (evt) =>\n        if evt.lengthComputable\n          @progress = 100 * evt.loaded / evt.total\n        else\n          # If it's chunked encoding, we have no way of knowing the total length of the\n          # response, all we can do is increment the progress with backoff such that we\n          # never hit 100% until it's done.\n          @progress = @progress + (100 - @progress) / 2\n      , false\n\n      for event in ['load', 'abort', 'timeout', 'error']\n        request.addEventListener event, =>\n          @progress = 100\n        , false\n\n    else\n      _onreadystatechange = request.onreadystatechange\n      request.onreadystatechange = =>\n        if request.readyState in [0, 4]\n          @progress = 100\n        else if request.readyState is 3\n          @progress = 50\n\n        _onreadystatechange?(arguments...)\n\nclass SocketRequestTracker\n  constructor: (request) ->\n    @progress = 0\n\n    for event in ['error', 'open']\n      request.addEventListener event, =>\n        @progress = 100\n      , false\n\nclass ElementMonitor\n  constructor: (options={}) ->\n    @elements = []\n\n    options.selectors ?= []\n    for selector in options.selectors\n      @elements.push new ElementTracker selector\n\nclass ElementTracker\n  constructor: (@selector) ->\n    @progress = 0\n\n    @check()\n\n  check: ->\n    if document.querySelector(@selector)\n      @done()\n    else\n      setTimeout (=> @check()),\n        options.elements.checkInterval\n\n  done: ->\n    @progress = 100\n\nclass DocumentMonitor\n  states:\n    loading: 0\n    interactive: 50\n    complete: 100\n\n  constructor: ->\n    @progress = @states[document.readyState] ? 100\n\n    _onreadystatechange = document.onreadystatechange\n    document.onreadystatechange = =>\n      if @states[document.readyState]?\n        @progress = @states[document.readyState]\n\n      _onreadystatechange?(arguments...)\n\nclass EventLagMonitor\n  constructor: ->\n    @progress = 0\n\n    avg = 0\n\n    samples = []\n\n    points = 0\n    last = now()\n    interval = setInterval =>\n      diff = now() - last - 50\n      last = now()\n\n      samples.push diff\n\n      if samples.length > options.eventLag.sampleCount\n        samples.shift()\n\n      avg = avgAmplitude samples\n\n      if ++points >= options.eventLag.minSamples and avg < options.eventLag.lagThreshold\n        @progress = 100\n\n        clearInterval interval\n      else\n        @progress = 100 * (3 / (avg + 3))\n\n    , 50\n\nclass Scaler\n  constructor: (@source) ->\n    @last = @sinceLastUpdate = 0\n    @rate = options.initialRate\n    @catchup = 0\n    @progress = @lastProgress = 0\n\n    if @source?\n      @progress = result(@source, 'progress')\n\n  tick: (frameTime, val) ->\n    val ?= result(@source, 'progress')\n\n    if val >= 100\n      @done = true\n\n    if val == @last\n      @sinceLastUpdate += frameTime\n    else\n      if @sinceLastUpdate\n        @rate = (val - @last) / @sinceLastUpdate\n\n      @catchup = (val - @progress) / options.catchupTime\n\n      @sinceLastUpdate = 0\n      @last = val\n\n    if val > @progress\n      # After we've got a datapoint, we have catchupTime to\n      # get the progress bar to reflect that new data\n      @progress += @catchup * frameTime\n\n    scaling = (1 - Math.pow(@progress / 100, options.easeFactor))\n\n    # Based on the rate of the last update, we preemptively update\n    # the progress bar, scaling it so it can never hit 100% until we\n    # know it's done.\n    @progress += scaling * @rate * frameTime\n\n    @progress = Math.min(@lastProgress + options.maxProgressPerFrame, @progress)\n\n    @progress = Math.max(0, @progress)\n    @progress = Math.min(100, @progress)\n\n    @lastProgress = @progress\n\n    @progress\n\nsources = null\nscalers = null\nbar = null\nuniScaler = null\nanimation = null\ncancelAnimation = null\nPace.running = false\n\nhandlePushState = ->\n  if options.restartOnPushState\n    Pace.restart()\n\n# We reset the bar whenever it looks like an ajax navigation has occured.\nif window.history.pushState?\n  _pushState = window.history.pushState\n  window.history.pushState = ->\n    handlePushState()\n\n    _pushState.apply window.history, arguments\n\nif window.history.replaceState?\n  _replaceState = window.history.replaceState\n  window.history.replaceState = ->\n    handlePushState()\n\n    _replaceState.apply window.history, arguments\n\nSOURCE_KEYS =\n  ajax: AjaxMonitor\n  elements: ElementMonitor\n  document: DocumentMonitor\n  eventLag: EventLagMonitor\n\ndo init = ->\n  Pace.sources = sources = []\n\n  for type in ['ajax', 'elements', 'document', 'eventLag']\n    if options[type] isnt false\n      sources.push new SOURCE_KEYS[type](options[type])\n\n  for source in options.extraSources ? []\n    sources.push new source(options)\n\n  Pace.bar = bar = new Bar\n\n  # Each source of progress data has it's own scaler to smooth its output\n  scalers = []\n\n  # We have an extra scaler for the final output to keep things looking nice as we add and\n  # remove sources\n  uniScaler = new Scaler\n\nPace.stop = ->\n  Pace.trigger 'stop'\n  Pace.running = false\n\n  bar.destroy()\n\n  # Not all browsers support cancelAnimationFrame\n  cancelAnimation = true\n\n  if animation?\n    cancelAnimationFrame? animation\n    animation = null\n\n  init()\n\nPace.restart = ->\n  Pace.trigger 'restart'\n  Pace.stop()\n  Pace.start()\n\nPace.go = ->\n  Pace.running = true\n\n  bar.render()\n\n  start = now()\n\n  cancelAnimation = false\n  animation = runAnimation (frameTime, enqueueNextFrame) ->\n    # Every source gives us a progress number from 0 - 100\n    # It's up to us to figure out how to turn that into a smoothly moving bar\n    #\n    # Their progress numbers can only increment.  We try to interpolate\n    # between the numbers.\n\n    remaining = 100 - bar.progress\n\n    count = sum = 0\n    done = true\n    # A source is composed of a bunch of elements, each with a raw, unscaled progress\n    for source, i in sources\n      scalerList = scalers[i] ?= []\n\n      elements = source.elements ? [source]\n\n      # Each element is given it's own scaler, which turns its value into something\n      # smoothed for display\n      for element, j in elements\n        scaler = scalerList[j] ?= new Scaler element\n\n        done &= scaler.done\n\n        continue if scaler.done\n\n        count++\n        sum += scaler.tick(frameTime)\n\n    avg = sum / count\n\n    bar.update uniScaler.tick(frameTime, avg)\n\n    if bar.done() or done or cancelAnimation\n      bar.update 100\n\n      Pace.trigger 'done'\n\n      setTimeout ->\n        bar.finish()\n\n        Pace.running = false\n\n        Pace.trigger 'hide'\n      , Math.max(options.ghostTime, Math.max(options.minTime - (now() - start), 0))\n    else\n      enqueueNextFrame()\n\nPace.start = (_options) ->\n  extend options, _options\n\n  Pace.running = true\n\n  try\n    bar.render()\n  catch NoTargetError\n\n  # It's usually possible to render a bit before the document declares itself ready\n  if not document.querySelector('.pace')\n    setTimeout Pace.start, 50\n  else\n    Pace.trigger 'start'\n    Pace.go()\n\n# if typeof define is 'function' and define.amd\n#   # AMD\n#   define ['pace'], -> Pace\nif typeof exports is 'object'\n  # CommonJS\n  module.exports = Pace\nelse\n  # Global\n  if options.startOnPageLoad\n    Pace.start()\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/pace.custom.coffee\n **/"],"sourceRoot":""}